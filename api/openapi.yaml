openapi: 3.0.0
info:
  title: Arengu REST API
  description: List of available operations in Arengu platform.
  termsOfService: https://www.arengu.com/terms-and-conditions.html
  contact:
    name: Arengu Support
    email: support@arengu.com
  version: '1.4'
servers:
  - url: https://api.arengu.com
    description: Production server
tags:
  - name: Executions
    description: Check all the requests received by existing flows.
  - name: Sessions
    description: Create a temporal session using the credentials provided on registration.
  - name: Submissions
    description: Process the data received from a published form.
paths:
  /private/executions/search:
    post:
      tags:
        - Executions
      summary: Search executions
      description: Retrieves the latest processed requests sorted by descending processing date.
      operationId: searchExecutions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionSearch'
            examples:
              simple:
                $ref: '#/components/examples/ExecutionSearchSimple'
              advanced:
                $ref: '#/components/examples/ExecutionSearchAdvanced'
      responses:
        200:
          description: Executions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionPage'
              examples:
                default:
                  $ref: '#/components/examples/ExecutionSearchResults'
  /private/executions/{executionId}:
    parameters:
      - name: executionId
        in: path
        schema:
          type: string
        description: Identifier of the implicated execution
        required: true
        example: '154878272714586010'
    get:
      tags:
        - Executions
      summary: Get a execution
      description: Retrieves the specified execution.
      operationId: getExecution
      parameters:
        - name: debug
          in: query
          schema:
            type: boolean
            default: false
          description: If true, debug information is included into the response.
      responses:
        200:
          description: Executions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionObjectWithDebug'
              examples:
                default:
                  $ref: '#/components/examples/ExecutionObject'
                debug/success:
                  $ref: '#/components/examples/ExecutionObjectWithDebugCompleted'
                debug/failure:
                  $ref: '#/components/examples/ExecutionObjectWithDebugFailed'
    delete:
      tags:
        - Executions
      summary: Delete a execution
      description: Deletes the specified execution.
      operationId: deleteExecution
      responses:
        200:
          description: Execution deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionObject'
              examples:
                default:
                  $ref: '#/components/examples/ExecutionObject'
  /private/sessions/:
    post:
      tags:
        - Sessions
      summary: Create a session
      description: Creates a new session associated with the specified user.
      operationId: createSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionCreate'
            examples:
              default:
                $ref: '#/components/examples/SessionCreate'
      responses:
        200:
          description: Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionObject'
              examples:
                default:
                  $ref: '#/components/examples/SessionObject'
  /private/sessions/refresh:
    post:
      tags:
        - Sessions
      summary: Refresh a session
      description: |
        Creates a new session if all these conditions are satisfied:
          - Current session is not expired.
          - The related user did not change the password since the session was created.
      operationId: refreshSession
      responses:
        200:
          description: Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionObject'
              examples:
                default:
                  $ref: '#/components/examples/SessionObject'
  /private/submissions/search:
    post:
      tags:
        - Submissions
      summary: Search submissions
      description: Retrieves the latest received submissions sorted by descending processing date.
      operationId: searchSubmissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionSearch'
            examples:
              simple:
                $ref: '#/components/examples/SubmissionSearchSimple'
              advanced:
                $ref: '#/components/examples/SubmissionSearchAdvanced'
      responses:
        200:
          description: Submissions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionPage'
              examples:
                default:
                  $ref: '#/components/examples/SubmissionSearchResults'
  /private/submissions/export:
    post:
      tags:
        - Submissions
      summary: Export submissions
      description: |
        Exports all the received submissions sorted by descending processing date.

        The Content-Type header depends on the format you specify.
      operationId: exportSubmissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionExportRequest'
            examples:
              default:
                $ref: '#/components/examples/SubmissionExportRequest'
      responses:
        200:
          description: Submissions exported successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmissionExportResponse'
              examples:
                default:
                  $ref: '#/components/examples/SubmissionExportResponse'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmissionExportResponse'
  /private/submissions/{submissionId}:
    parameters:
      - name: submissionId
        in: path
        schema:
          type: string
        description: Identifier of the implicated submission
        required: true
        example: '154878962885858808'
    get:
      tags:
        - Submissions
      summary: Get a submission
      description: Retrieves the specified submission.
      operationId: getSubmission
      responses:
        200:
          description: Submissions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionObject'
              examples:
                default:
                  $ref: '#/components/examples/SubmissionObject'
    delete:
      tags:
        - Submissions
      summary: Delete a submission
      description: Deletes the specified submission.
      operationId: deleteSubmission
      responses:
        200:
          description: Submission deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionObject'
              examples:
                default:
                  $ref: '#/components/examples/SubmissionObject'
components:
  examples:
    ExecutionObject:
      summary: default
      value:
        id: '154878272714586010'
        flowId: '154878267316346394'
        flowName: User onboarding
        workspaceId: '4504116097187840'
        status: COMPLETED
        createdAt: '2019-01-29T17:25:27.145Z'
        startedAt: '2019-01-29T17:25:27.126Z'
        endedAt: '2019-01-29T17:25:28.302Z'
        updatedAt: '2019-01-29T17:25:28.303Z'
    ExecutionObjectWithDebugCompleted:
      summary: +debug (completed)
      value:
        id: '154878322445775790'
        flowId: '154878319988646444'
        flowName: Events processor
        workspaceId: '4504116097187840'
        status: COMPLETED
        createdAt: '2019-01-29T17:33:44.457Z'
        startedAt: '2019-01-29T17:33:44.470Z'
        endedAt: '2019-01-29T17:33:44.471Z'
        updatedAt: '2019-01-29T17:33:44.472Z'
        debug:
          input:
            headers:
              content-type:	application/json;charset=UTF-8
              authorization: Bearer gzxDxj8FU5F3jAd
            body:
              resourceId: 4756234
              storeId: 2432
              event: sold_out
          output:
            status: 200
            headers:
              content-type:	application/json;charset=UTF-8
            body:
              processed: true
          error: null
          tracing:
            - id: forwardEvent
              alias: Forward event
              type: HTTP
              action: SEND_REQUEST
              input:
                url: https://api.example.com/events
                method: POST
                headers:
                  content-type: application/json;charset=UTF-8
                basic: null
                body:
                  resourceId: 4756234
                  storeId: 2432
                  event: sold_out
                type: JSON
                acceptNOK: false
              output:
                status: 200
                headers:
                  content-type: application/json;charset=UTF-8
                body:
                  responseCode: 'OK'
              error: null
            - id: returnResponse
              alias: Return response
              type: FLOW
              action: RETURN_RESPONSE
              input:
                status: 200
                headers:
                  content-type: application/json;charset=UTF-8
                body:
                  processed: true
              output:
                status: 200
                headers:
                  content-type: application/json;charset=UTF-8
                body:
                  processed: true
              error: null
    ExecutionObjectWithDebugFailed:
      summary: +debug (failed)
      value:
        id: '154878377231934820'
        flowId: '154878376255333219'
        flowName: Event listener
        workspaceId: '4504116097187840'
        status: FAILED
        createdAt: '2019-01-29T17:42:52.319Z'
        startedAt: '2019-01-29T17:42:52.327Z'
        endedAt: '2019-01-29T17:42:52.333Z'
        updatedAt: '2019-01-29T17:42:52.334Z'
        debug:
          input:
            headers:
              content-type:	application/json;charset=UTF-8
              authorization: Bearer gzxDxj8FU5F3jAd
            body:
              event: form_focus
              formId: contactForm
          output: null
          error:
            actionId: forwardEvent
            actionAlias: Forward event
            code: ERR_ACTION_EXECUTION_ERROR
            message: 'Server returned non success code: 404'
          tracing:
            - id: forwardEvent
              alias: Forward event
              type: HTTP
              action: SEND_REQUEST
              input:
                url: https://api.example.com/events
                method: POST
                headers:
                  content-type: application/json;charset=UTF-8
                basic: null
                body:
                  event: form_focus
                  formId: contactForm
                type: JSON
                acceptNOK: false
              output: null
              error:
                actionId: forwardEvent
                actionAlias: Forward event
                code: ERR_ACTION_EXECUTION_ERROR
                message: 'Server returned non success code: 404'
    ExecutionSearchAdvanced:
      summary: advanced
      value:
        flowId: '154878388287661012'
        filter:
          from: '2019-01-29T17:30:00.000'
          to: '2019-01-29T18:00:00.000'
          status: DELAYED
        pagination:
          page: 1
          size: 20
    ExecutionSearchResults:
      summary: default
      value:
        pagination:
          hasBefore: false
          hasNext: false
        items:
          - id: '154878389526377252'
            flowId: '154878388287661012'
            flowName: Update customer
            workspaceId: '4504116097187840'
            status: DELAYED
            createdAt: 2019-01-29T17:44:55.263Z'
            startedAt: 2019-01-29T17:45:14.263Z'
            endedAt: 2019-01-29T17:44:55.275Z'
            updatedAt: '2019-01-29T17:44:55.276Z'
    ExecutionSearchSimple:
      summary: simple
      value:
        flowId: '154878388287661012'
    SessionCreate:
      summary: default
      value:
        type: credentials
        credentials:
          email: john.doe@example.com
          passwordHash: a8ed0375fe4031438fb84e5f8
    SessionObject:
      summary: default
      value:
        userId: '154808587686619321'
        planId: FREE2019
        token: eyJhbGciOiJIUzUxMiIsInR5c
        createdAt: '2019-01-23T12:08:42.951Z'
        expiresAt: '2019-01-23T13:08:42.951Z'
    SessionRefresh:
      summary: default
      value:
        type: credentials
        credentials:
          email: john.doe@example.com
          passwordHash: a8ed0375fe4031438fb84e5f8
    SubmissionExportRequest:
      summary: default
      value:
        formId: '154832175553844371'
        format: CSV
    SubmissionExportResponse:
      summary: default
      value:
        - id: '154878858097026779'
          formId: '154832175553844371'
          workspaceId: '4504116097187840'
          formData:
            name: Janet Doe
            email: janet.doe@example.com
            message: I want more information
            referer: user456
          metaData:
            navigator:
              language: en-US
              userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'
            navigation:
              location:
                url: https://www.example.com/contact
                host: www.example.com
                path: /contact
                protocol: 'https:'
                parameters: '?referer=user456&utm_medium=email&utm_source=promo_email&utm_content=copy_variation1&utm_campaign=january_promo'
              analytics:
                ga:
                  utm_term: null
                  utm_medium: email
                  utm_source: promo_email
                  utm_content: copy_variation1
                  utm_campaign: january_promo
            view:
              screen:
                width: 1920
                height: 1080
              window:
                width: 1860
                height: 950
          createdAt: '2019-01-29T19:03:00.970Z'
    SubmissionObject:
      summary: default
      value:
        id: '154878962885858808'
        formId: '154878753193365963'
        workspaceId: '4504116097187840'
        formData:
          name:
            type: TEXT
            value: John Doe
          email:
            type: EMAIL
            value: john.doe@acme.com
          message:
            type: TEXT
            value: Improve employees onboarding
        metaData:
          navigator:
            language: en-US
            userAgent: 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'
          navigation:
            location:
              url: https://www.acme.com/feedback
              host: www.acme.com
              path: /feedback
              protocol: 'https:'
              parameters: '?lang=en'
            analytics:
              ga:
                utm_term: null
                utm_medium: null
                utm_source: null
                utm_content: null
                utm_campaign: null
          view:
            screen:
              width: 1024
              height: 768
            window:
              width: 1024
              height: 663
        createdAt: '2019-01-29T19:20:28.858Z'
    SubmissionSearchAdvanced:
      summary: advanced
      value:
        formId: '154832175553844371'
        pagination:
          page: 1
          size: 20
    SubmissionSearchResults:
      summary: default
      value:
        pagination:
          hasBefore: false
          hasNext: false
        items:
          - id: '154878858097026779'
            formId: '154832175553844371'
            workspaceId: '4504116097187840'
            formData:
              name:
                type: TEXT
                value: Janet Doe
              email:
                type: EMAIL
                value: janet.doe@example.com
              message:
                type: TEXT
                value: I want more information
              referer:
                type: HIDDEN
                value: user456
            metaData:
              navigator:
                language: en-US
                userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'
              navigation:
                location:
                  url: https://www.example.com/contact
                  host: www.example.com
                  path: /contact
                  protocol: 'https:'
                  parameters: '?referer=user456&utm_medium=email&utm_source=promo_email&utm_content=copy_variation1&utm_campaign=january_promo'
                analytics:
                  ga:
                    utm_term: null
                    utm_medium: email
                    utm_source: promo_email
                    utm_content: copy_variation1
                    utm_campaign: january_promo
              view:
                screen:
                  width: 1920
                  height: 1080
                window:
                  width: 1860
                  height: 950
            createdAt: '2019-01-29T19:03:00.970Z'
    SubmissionSearchSimple:
      summary: simple
      value:
        formId: '154832175553844371'
  schemas:
    ActionError:
      allOf:
        - $ref: '#/components/schemas/AppError'
        - type: object
          properties:
            actionId:
              type: string
              description: Identifier of the action that caused the problem.
            actionAlias:
              type: string
              description: Alias of the related action.
          required:
            - actionId
            - actionAlias
    AppError:
      type: object
      description: Base model for application errors.
      properties:
        code:
          type: string
          description: Error code that identifies the problem.
        message:
          type: string
          description: Technical explanation of the error.
        details:
          type: object
          description: Additional informaton of the failure.
      required:
        - code
        - message
        - details
    ExecutionRequest:
      type: object
      description: Data sent by user on request
      properties:
        headers:
          type: object
          description: HTTP headers. Header keys are transformed to lower case.
        body:
          type: string
          default: {}
          description: Request payload
      required:
        - headers
        - body
    ExecutionResponse:
      type: object
      description: Data sent to user when execution was processed
      properties:
        headers:
          type: object
          default: {}
          description: HTTP headers
        status:
          type: integer
          description: HTTP status code
          minimum: 200
          default: 200
          maximum: 599
        body:
          type: string
          default: {}
          description: Response payload
    ExecutionDebug:
      type: object
      properties:
        input:
          $ref: '#/components/schemas/ExecutionRequest'
        output:
          $ref: '#/components/schemas/ExecutionResponse'
        error:
          $ref: '#/components/schemas/ActionError'
        tracing:
          $ref: '#/components/schemas/ExecutionTracing'
      required:
        - input
        - tracing
    ExecutionObject:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for that execution.
        flowId:
          type: string
          description: Identifier of the flow associated with the execution.
        flowName:
          type: string
          description: Name of the related flow.
        workspaceId:
          type: string
          description: Identifier of the workspace that groups the flow and its executions.
        status:
          type: string
          description: Current status of the request
          enum:
            - PENDING
            - RUNNING
            - DELAYED
            - COMPLETED
            - FAILED
        createdAt:
          type: string
          format: date-time
          description: Date when the session was received.
        startedAt:
          type: string
          format: date-time
          description: Date when server started to process it.
        endedAt:
          type: string
          format: date-time
          description: Date when the request was completely processed.
        updatedAt:
          type: string
          format: date-time
          description: Last moment when the status was updated.
      required:
        - id
        - flowId
        - flowName
        - workspaceId
        - status
        - createdAt
    ExecutionObjectWithDebug:
      allOf:
        - $ref: '#/components/schemas/ExecutionObject'
        - type: object
          properties:
            debug:
              $ref: '#/components/schemas/ExecutionDebug'
    ExecutionPage:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/PageResponse'
            items:
              type: array
              description: List of executions that match the criteria
              items:
                $ref: '#/components/schemas/ExecutionObject'
          required:
            - pagination
            - items
    ExecutionSearch:
      type: object
      properties:
        flowId:
          type: string
          description: Identifier associated with the flow.
        pagination:
          $ref: '#/components/schemas/PageRequest'
        filter:
          $ref: '#/components/schemas/ExecutionSearchFilter'
      required:
        - flowId
    ExecutionSearchFilter:
      type: object
      description: Excludes non relevant executions.
      properties:
        from:
          type: string
          format: date-time
          description: Excludes all executions received before the specified date (<=).
        to:
          type: string
          format: date-time
          description: Excludes all executions that were *not* received before the specified date (<).
        status:
          type: string
          description: Excludes all executions whose statuses does not equal the specified one.
          enum:
            - PENDING
            - RUNNING
            - DELAYED
            - COMPLETED
            - FAILED
    ExecutionTracing:
      type: array
      description: Details of each executed action for debugging purposes.
      items:
        $ref: '#/components/schemas/ExecutionTracingItem'
    ExecutionTracingItem:
      type: object
      description: Input and output of each executed action.
      properties:
        id:
          type: string
          description: Action identifier.
        alias:
          type: string
          description: Action alias.
        type:
          type: string
          description: Action type.
        action:
          type: string
          description: Kind of action.
        input:
          type: object
          description: Calculated params after variables replacements
        output:
          type: object
          description: Information obtained on action execution
        error:
          $ref: '#/components/schemas/ActionError'
      required:
        - id
        - type
        - action
        - input
    PageRequest:
      type: object
      description: Specifies the page you want to retrieve.
      properties:
        page:
          type: integer
          minimum: 1
          default: 1
          description: Number of the page.
        size:
          type: integer
          minimum: 1
          default: 20
          maximum: 50
          description: Number of items per page.
    PageResponse:
      type: object
      description: Informational flags for page navigation
      properties:
        hasBefore:
          type: boolean
          default: fale
          description: If true, you can request the previous page.
        hasNext:
          type: integer
          default: false
          description: If true, you can request the next page.
      required:
        - hasBefore
        - hasNext
    SessionCreate:
      type: object
      properties:
        type:
          type: string
          enum:
            - credentials
          default: credentials
          description: Specifies the type of credentials you provide.
        credentials:
          type: object
          description: Data that proves you own that account.
          properties:
            email:
              type: string
              description: Email address associated with the user.
            passwordHash:
              type: string
              format: password
              description: Hashed password provided on registration.
          required:
            - email
            - passwordHash
      required:
        - type
        - credentials
    SessionObject:
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for that user.
        planId:
          type: string
          description: Identifier of the billing plan associated with that user.
        token:
          type: string
          description: Session token for private requests.
        createdAt:
          type: string
          format: date-time
          description: Date when the session was created.
        expiresAt:
          type: string
          format: date-time
          description: Date when the new session expires.
      required:
        - userId
        - planId
        - token
        - createdAt
        - expiresAt
    SubmissionBase:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for that submission.
        formId:
          type: string
          description: Identifier of the form that generated the submission.
        workspaceId:
          type: string
          description: Identifier of the workspace that groups the form and its submissions.
        createdAt:
          type: string
          format: date-time
          description: Date when the submission was created.
      required:
        - id
        - formId
        - workspaceId
        - createdAt
    SubmissionExportRequest:
      type: object
      properties:
        formId:
          type: string
          description: Identifier associated with the form.
        format:
          type: string
          enum:
            - CSV
            - JSON
          default: JSON
          description: Format you want to export the data
      required:
        - formId
    SubmissionExportResponse:
      allOf:
        - $ref: '#/components/schemas/SubmissionBase'
        - type: object
          properties:
            formData:
              $ref: '#/components/schemas/SubmissionFormValues'
            metaData:
              $ref: '#/components/schemas/SubmissionMetaData'
          required:
            - formData
            - metaData
    SubmissionField:
      type: object
      description: Data provided by user for a specific field plus some extra information.
      properties:
        type:
          type: string
          description: Type of field.
        value:
          $ref: '#/components/schemas/SubmissionFieldValue'
    SubmissionFieldValue:
      description: Value provided by user.
    SubmissionFormData:
      type: object
      description: This map contains as many properties as fields have the form. The fields are indexed by their field identifiers and all the values have the same structure.
      properties:
        fieldId1:
          $ref: '#/components/schemas/SubmissionField'
        fieldIdN:
          $ref: '#/components/schemas/SubmissionField'
        hidddenFieldId1:
          $ref: '#/components/schemas/SubmissionField'
        hidddenFieldIdN:
          $ref: '#/components/schemas/SubmissionField'
    SubmissionFormValues:
      type: object
      description: This map contains as many properties as fields have the form. The fields are indexed by their field identifiers.
      properties:
        fieldId1:
          $ref: '#/components/schemas/SubmissionFieldValue'
        fieldIdN:
          $ref: '#/components/schemas/SubmissionFieldValue'
        hiddenFieldId1:
          $ref: '#/components/schemas/SubmissionFieldValue'
        hiddenFieldIdN:
          $ref: '#/components/schemas/SubmissionFieldValue'
    SubmissionMetaData:
      type: object
      description: Contains data collected automatically when someone submits a form.
      properties:
        navigator:
          type: object
          description: Information about the browser she uses.
          properties:
            userAgent:
              type: string
              description: Generic data about browser and operating system.
            language:
              type: string
              description: Prefered language of the visitor.
          required:
            - userAgent
            - language
        navigation:
          type: object
          description: Information about the webpage where the form is embedded.
          properties:
            referer:
              type: string
              description: URL of the website that refered the user to the form.
            location:
              type: object
              description: Structured data of the URL where the form is published.
              properties:
                url:
                  type: string
                  description: Complete URL of the page where user has filled in the form.
                host:
                  type: string
                  description: Domain where the form is hosted.
                path:
                  type: string
                  description: Path to the page that contains the form.
                protocol:
                  type: string
                  description: Clarifies if the data was sent using https or not.
                parameters:
                  type: string
                  description: Query params set when the submission was done.
              required:
                - url
                - host
                - path
                - protocol
                - parameters
            analytics:
              type: object
              description: Structured parameters for analytical purposes.
              properties:
                ga:
                  type: object
                  description: Specific parameters for Google Analytics.
                  properties:
                    utm_source:
                      type: string
                      description: Which site sent the traffic.
                    utm_medium:
                      type: string
                      description: What type of link was used (ie. cpc).
                    utm_campaign:
                      type: string
                      description: Specific product promotion or strategic campaign.
                    utm_term:
                      type: string
                      description: Search terms.
                    utm_content:
                      type: string
                      description: The specific item clicked to bring the user to the site.
              required:
                - ga
          required:
            - location
            - analytics
        view:
          type: object
          description: Information about the size of the view port and the screen
          properties:
            screen:
              type: object
              description: Size of the screen where the browser is displayed
              properties:
                width:
                  type: integer
                  description: Width of the screen in pixels
                height:
                  type: integer
                  description: Height of the screen in pixels
              required:
                - width
                - height
            window:
              type: object
              description: Size of the view port (browser excluding toolbars and bookmarks)
              properties:
                width:
                  type: integer
                  description: Width of the view port in pixels
                height:
                  type: integer
                  description: Height of the view port in pixels
              required:
                - width
                - height
          required:
            - screen
            - window
      required:
        - navigator
        - navigation
        - view
    SubmissionObject:
      allOf:
        - $ref: '#/components/schemas/SubmissionBase'
        - type: object
          properties:
            formData:
              $ref: '#/components/schemas/SubmissionFormData'
            metaData:
              $ref: '#/components/schemas/SubmissionMetaData'
          required:
            - formData
            - metaData
    SubmissionPage:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/PageResponse'
            items:
              type: array
              description: List of submissions that match the criteria
              items:
                $ref: '#/components/schemas/SubmissionObject'
          required:
            - pagination
            - items
    SubmissionSearch:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/PageRequest'
        - type: object
          properties:
            formId:
              type: string
              description: Identifier associated with the form.
            filter:
              type: object
              description: Excludes non relevant submissions.
          required:
            - formId
